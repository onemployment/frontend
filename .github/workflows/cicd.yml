name: CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  AWS_REGION: us-east-2
  S3_BUCKET: www.onemployment.org
  CLOUDFRONT_DISTRIBUTION_ID: E2AR0Y5IQCACIR

jobs:
  ci:
    name: Continuous Integration
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

      - name: Format check
        run: npm run format:check

      - name: Build
        run: npm run build
        env:
          NODE_ENV: production

      - name: Unit tests
        run: npm run test

  cd:
    name: Continuous Deployment
    runs-on: ubuntu-latest
    needs: ci
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build
        env:
          NODE_ENV: production

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy to S3 with optimized Cache-Control headers
        run: |
          # Upload HTML files with no-cache
          aws s3 sync dist/ s3://${{ env.S3_BUCKET }}/ \
            --exclude "assets/*" \
            --cache-control "no-store, no-cache, must-revalidate" \
            --delete

          # Upload assets with long-term caching (fingerprinted files)
          aws s3 sync dist/assets/ s3://${{ env.S3_BUCKET }}/assets/ \
            --cache-control "public, max-age=31536000, immutable"

      - name: Invalidate CloudFront (index.html only)
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ env.CLOUDFRONT_DISTRIBUTION_ID }} \
            --paths "/index.html"

      - name: Deployment summary
        run: |
          echo "ðŸš€ Deployment completed successfully!"
          echo "ðŸ“„ Frontend URL: https://www.onemployment.org"
          echo "ðŸ”„ CloudFront invalidation created for /index.html"
          echo "âš¡ Assets cached for 1 year with immutable headers"
